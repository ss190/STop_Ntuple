35c35
<  
---
> 
52,56d51
<   //--------------------------------------------------//
<   //    Build up Vectors of TLorentzVectors for Jets  //
<   //    and other basic objects                       //
<   //--------------------------------------------------//
< 
61,64c56,57
<   //--------------------------------------------//
<   //  Event cleaning, pre-selection and trigger
<   //--------------------------------------------//
< 
---
>   //--------------------------------------//
>  
69,72d61
<   //---------------------------------------//
<   //          cut out multijets
<   //---------------------------------------//
< 
96c85
<   //--------------------------------------//
---
>   //--------------------------------------------------//
113,116d101
<   //--------------------------------------//
<   //      see if jets pass pt cut         //
<   //--------------------------------------//
< 
145c130
<   if ( nEl_baseline+nMu_baseline == 0 ) { 
---
>   if ( nel+nmuon == 0 ) { 
157,158c142
<   //  double weight = 1.0;
<   double weight = pileupweight*AnalysisWeight*XSecWeight;
---
>   double weight = 1.0;
199,235d182
<   //---------------------------------------------//
<   //    find what event decay mode was in truth  //
<   //---------------------------------------------//
< 
<   bool top1_ishad = false;
<   if ( abs(pdgId1_1) < 6 ) {
<     top1_ishad = true;
<   }
<   bool top1_istau = false;
<   if ( abs(pdgId1_1) == 15 ) {
<     top1_istau = true;
<   }
< 
<   bool top2_ishad = false;
<   if ( abs(pdgId2_1) < 6 ) {
<     top2_ishad = true;
<   }
<   bool top2_istau = false;
<   if ( abs(pdgId2_1) == 15 ) {
<     top2_istau = true;
<   }
< 
<   //-------------------------------------------------------//
<   //  plot plots corresponding to decay mode for reference //
<   //-------------------------------------------------------//
<   
<   if ( top1_ishad && top2_ishad ) {
<     plot2b_AllHad_ThrustAna(weight, 8);
<   }
<   else {
<     plot2b_AllHad_ThrustAna(weight, 9);
<   }
< 
<   //-------------------------------------------------------------------------//
<   //  draw crude 2D event displays for both truth and reconstructed objects  //
<   //-------------------------------------------------------------------------//
< 
241,245d187
<   //---------------------------------------------------//
<   //  Begin actual cutflow on reconstructed variables  //
<   //---------------------------------------------------//
< 
<   // at least 4 jets on TT side
249d190
<   // at least 1 bjet on TT side
253,254c194
<   // ISR pt cut
<   if ( ISRjets_vec.Pt() < 400. ) return;
---
>   if ( ISRjets_vec.Pt() < 500. ) return;
257d196
<   // ISR, met deltaphi cut
261d199
<   // no top candidate reconstructed with large negative p-along-thrust
267c205
<   // 300 GeV optimization  based on TT system / ISR system ratios                           
---
>   // 300 GeV optimization                                   
328,340d265
<   //----------------------------------------------------//                                                  
<   //   Calculate the thrust vector in the px,py plane
<   //   The thrust vector is the direction that maximizes the momentum along it
<   //   find 2D-vector "n" such that Sum ( 3momentum dot n ), summed over all jets and met is maximized
< 
<   //  inputs: std::vector<TLorentzVector> Jet_TLV    // list of jet TLV, size njets                          
<   //          std::vector<int> fiducialjets;         // list of jets with |eta|<2.8, size nfiducialjets      
<   //          TLorentzVector MET_TLV;                // only the 2D vector of the MET, pz and e are 0
< 
<   //  outputs: TLorentzVector thrust_vec             // only the 2D vector of the thrust, positive is in the same direction as met
<   //           TLorentzVector thrust_perp_vec        // 2D vector of the direction perpendicular to thrust, positive side is defined by 
<   //                                                    positive cross product with thrust_vec
< 
343,346d267
<   //----------------------------------//
<   //   Write sum as a TF1 formula     //
<   //----------------------------------//
< 
371,374d291
<   //---------------------------------//
<   //      Find Maximum of TF1        //
<   //---------------------------------//
< 
381,384d297
<   //--------------------------------------------------------------//
<   //  define positive thrust as positive dot product with MET     //
<   //--------------------------------------------------------------//
< 
392,395d304
<   //--------------------------------------------------------------//   
<   //            Find Direction Perpendicular to Thrust            //   
<   //--------------------------------------------------------------//   
< 
403,406d311
<   //------------------------------------------------------------------------//   
<   //  define positive perp thrust as positive cross product with thrust     //   
<   //------------------------------------------------------------------------//   
< 
437,450d341
<   //----------------------------------------------------//
<   //  Sorts the b-tagged jets by p-along-thrust
<   //  if there are >=3 bjets the 2 with the highest p-along-thrust
<   //  are probably the b's coming from the TT system
<   //  b's with the large negative p-along thrust is probably ISR
<   //
<   //  inputs: std::vector<TLorentzVector> Jet_TLV    // list of jet TLV, size njets                    
<   //          std::vector<bool>           Jet_isB    // is jet a bjets,  size njets                    
<   //          std::vector<int> bjets_index;          // list of bjet_indexes 
<   //          std::vector<int> fiducialjets;         // list of jets with |eta|<2.8, size nfiducialjets
<   //                                                                                                   
<   //  outputs: std::vector<int> bjets_index_sorted   // list of bjet_indexes sorted by p along thrust
<   //           std::vector<int> bjets_pthrust_sorted // list of bjet p along thrust sorted by p along thrust
< 
457,460d347
<     //-------------------------------------------------------------------//
<     //              Calculate bjet p along thrust                        //
<     //-------------------------------------------------------------------//
< 
466,469d352
<     //-------------------------------------------------------------------//
<     //  insert b jet into sorted vector according to its p along thrust  //
<     //-------------------------------------------------------------------//
< 
495,496d377
< 
<   // output list to see if the order was correct if on debug mode
498,504c379,380
<   if ( verbose ) {
<     for ( uint i=0; i < bjets_pthrust_sorted.size(); i++ ) {
<       std::cout << bjets_pthrust_sorted.at(i) << " " ;
<     }
<     for ( uint i=0; i < bjets_index_sorted.size(); i++ ) {
<       std::cout << bjets_index_sorted.at(i) << " " ;
<     }
---
>   for ( uint i=0; i < bjets_pthrust_sorted.size(); i++ ) {
>     if ( verbose ) std::cout << bjets_pthrust_sorted.at(i) << " " ;
506c382,385
< 
---
>   for ( uint i=0; i < bjets_index_sorted.size(); i++ ) {
>     if ( verbose ) std::cout << bjets_index_sorted.at(i) << " " ;
>   }
>   
513,528d391
<   //----------------------------------------------------// 
<   //  Decide which jets come from the ISR system and which 
<   //  comes from the TT system.   Jets with large negative p along thrust
<   //  and jets which form large mass systems with b-jets are considered ISR
<   //
<   //  inputs: std::vector<TLorentzVector> Jet_TLV    // list of jet TLV, size njets
<   //          std::vector<bool>           Jet_isB    // is jet a bjets,  size njets
<   //          std::vector<int> bjets_index_sorted;   // list of bjet_indexes sorted by p along thrust, size nbjets
<   //          std::vector<int> fiducialjets;         // list of jets with |eta|<2.8, size nfiducialjets           
<   //                                                                                                              
<   //  outputs: int n_ISRjets, n_TTjets               // number of ISR jets and number of TT jets found
<   //           int n_b_ISRjets, n_b_ISRjets          // number of bjets considered ISR and number of bjets considered TT 
<   //           TLorentzVector ISRjets_vec            // total ISR TLV (all ISR jets combined)
<   //           TLorentzVector TTjets_vec             // total TT system TLV ( all TT jets combined)
<   //           std::vector<int> potentialISR_index   // index of every ISR jet. feeds into vector<int> fiducialjets
< 
531d393
<   // get b-jets with the most positive p-along-thrust (positive side is same side as MET)
543,546c405
<   //-----------------------------------------------------------//
<   //      find ISR jets from list of fiducial jets             //
<   //-----------------------------------------------------------//
< 
---
>   // find ISR jet
556,559c415
<     //-----------------------------------------------------------//
<     //  if jet is too negative in p along thrust then it is ISR  //
<     //  if jet+bjet's mass is too large then it is an ISR        //
<     //-----------------------------------------------------------//
---
>     //    if ( isB ) continue;
569,570c425
<     //    if ( pthrust < -100.0 || maxBmass > 320. || minBmass > 170.) { //alternative definition, not sure which is best
<     if ( pthrust < -100.0 || minBmass > 170.) {
---
>     if ( pthrust < -100.0 || maxBmass > 320. || minBmass > 170.) {
595,616d449
<   //----------------------------------------------------//
<   //  Look to reconstruct a fully hadronic top in a cone around
<   //  the b with the most negative p-along-thrust.  TTbar bkg events
<   //  can have a full, fairly boosted hadronic top with large negative 
<   //  p-along-thrust.  Stop events on the other hand cannot as the ISR
<   //  push both tops to the positive hemisphere
<   //  i.e. if we find a top here and the top p-along-thrust is very negative
<   //  then the event is probably ttbar bkg and not stop.  
<   //  This reconstruction method does not work for stop because stop tops are not
<   //  boosted enough.  For stop, the results will probably be some random soft jets get
<   //  clustered together and the top peak is not reconstructed
<   //
<   //  inputs: std::vector<TLorentzVector> Jet_TLV    // list of jet TLV, size njets
<   //          std::vector<bool>           Jet_isB    // is jet a bjets,  size njets
<   //          std::vector<int> bjets_index;          // list of bjet indexes, size nbjets
<   //          std::vector<int> bjets_index_sorted;   // list of bjet_indexes sorted by p along thrust, size nbjets
<   //          std::vector<int> fiducialjets;         // list of jets with |eta|<2.8, size nfiducialjets
<   //          
<   //  outputs: found_W                               // whether we found hadronic W candidate within cone
<   //           TLorentzVector TTbar_Had_Top_vec      // TLV of best hadronic top candidate
<   //           TLorentzVector whad_vec               // TLV of best hadronic W candidate
< 
643,646d475
<   //-----------------------------------------------------//
<   //   Get the two most negative p-along-thrust b jets   //
<   //-----------------------------------------------------//
< 
677,680d505
< 	
< 	//----------------------------------------------------------------------------------------//
< 	// if b jet is massive only add one another jet as bjet maybe 2 jets from a boosted top   //
< 	//----------------------------------------------------------------------------------------//    
702,708d526
< 
< 	    //----------------------------------------------------//
< 	    //   Find all jet pairs that fall within deltaR cone  //
< 	    //----------------------------------------------------//
< 	    
< 	    // Note, one or both individual jets may be outside the cone.  
< 	    //       Only the combined 4vector of the jet pair must be within the cone
715,716d532
< 	      //  pick out jet pair that has the mass that is closest to the w mass
< 
726,730d541
< 
<       //--------------------------------------------//
<       // if cannot find top, search in a wider cone //
<       //--------------------------------------------//
< 
814,816c625,626
<   //--------------------------//
<   //        outputs
<   //--------------------------//
---
>   Jet_TLV.resize(0);
>   Jet_isB.resize(0);
818,822c628,629
<   Jet_TLV.resize(0); // signal jets
<   Jet_isB.resize(0); // whether jet is a b or not
< 
<   El_TLV.resize(0); // signal electrons
<   Mu_TLV.resize(0); // signal muons
---
>   El_TLV.resize(0);
>   Mu_TLV.resize(0);
824a632
>   trackMET_TLV.SetPxPyPzE(0,0,0,0);
826,830c634
<   //-------------------------//
< 
<   //  double btag_cut = -0.0436; // 70% working point
<   //  double btag_cut = -0.4434; // 77% working point
<   double btag_cut = -0.7887; // 85% working point
---
>   double btag_cut = -0.0436; // 70% cutoff
1176c980
<   if ( top1_ishad && top2_ishad ) {  // all had
---
>   if ( top1_ishad && top2_ishad ) {
1179c983
<   else if ( (top1_ishad || top2_ishad) && ( top1_istau || top2_istau ) ) { // single tau
---
>   else if ( ( top1_ishad && top2_istau ) || ( top2_ishad && top1_istau ) ) {
1182c986
<   else if ( (top1_ishad || top2_ishad) && ( !top1_istau && !top2_istau ) ) { // single lepton
---
>   else if ( ( top1_ishad && !top2_istau ) || ( top2_ishad && !top1_istau ) ) {
1185c989
<   else { // dilepton/ditau equivalent to !top1_ishad && !top2_ishad
---
>   else {
1348,1352d1151
< void CollectionTree::SetOutputName(std::string name) {
<   output_name = name;
<   return;
< }
< 
1563,1564d1361
<   if( verbose ) std::cout << "booking histos" << std::endl;
< 
1676c1473
<   for ( int i=0; i<10; i++ ) {
---
>   for ( int i=0; i<7; i++ ) {
1684c1481
<     Ana_AllHad_2b_Thrust_Thrust.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1.0) );
---
>     Ana_AllHad_2b_Thrust_Thrust[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1.0);
1686c1483
<     Ana_AllHad_2b_Thrust_Thrust_Met_dPhi.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_Thrust_Met_dPhi[i] = TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi());
1689c1486
<     Ana_AllHad_2b_Thrust_Jet_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -700.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_Jet_PThrust[i]= TH1F(name.Data(),name.Data(), 400, -700.0, 600.0);
1691c1488
<     Ana_AllHad_2b_Thrust_Jet_PtThrust.push_back( TH1F(name.Data(),name.Data(), 400, -500.0, 500.0) );
---
>     Ana_AllHad_2b_Thrust_Jet_PtThrust[i]= TH1F(name.Data(),name.Data(), 400, -500.0, 500.0);
1693,1694c1490,1491
<     Ana_AllHad_2b_Thrust_Jet_PThrust2D.push_back( TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0) );
<     
---
>     Ana_AllHad_2b_Thrust_Jet_PThrust2D[i]= TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0);
> 
1696c1493
<     Ana_AllHad_2b_Thrust_ISRJet_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -700.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_ISRJet_PThrust[i]= TH1F(name.Data(),name.Data(), 400, -700.0, 600.0);
1698c1495
<     Ana_AllHad_2b_Thrust_ISRJet_PtThrust.push_back( TH1F(name.Data(),name.Data(), 400, -500.0, 500.0) );
---
>     Ana_AllHad_2b_Thrust_ISRJet_PtThrust[i]= TH1F(name.Data(),name.Data(), 400, -500.0, 500.0);
1700,1701c1497,1498
<     Ana_AllHad_2b_Thrust_ISRJet_PThrust2D.push_back( TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0) );
<     
---
>     Ana_AllHad_2b_Thrust_ISRJet_PThrust2D[i]= TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0);
> 
1703c1500
<     Ana_AllHad_2b_Thrust_bJet_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -700.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_bJet_PThrust[i]= TH1F(name.Data(),name.Data(), 400, -700.0, 600.0);
1705c1502
<     Ana_AllHad_2b_Thrust_bJet_PtThrust.push_back( TH1F(name.Data(),name.Data(), 400, -500.0, 500.0) );
---
>     Ana_AllHad_2b_Thrust_bJet_PtThrust[i]= TH1F(name.Data(),name.Data(), 400, -500.0, 500.0);
1707c1504
<     Ana_AllHad_2b_Thrust_bJet_PThrust2D.push_back( TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_bJet_PThrust2D[i]= TH2F(name.Data(),name.Data(), 40, -500.,500., 40, -700.0, 600.0);
1712c1509
<     Ana_AllHad_2b_Thrust_METISR_PtDirRatio.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_METISR_PtDirRatio[i]  = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1715c1512
<     Ana_AllHad_2b_Thrust_MaxJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_MaxJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1717,1718c1514,1515
<     Ana_AllHad_2b_Thrust_MinJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
<     
---
>     Ana_AllHad_2b_Thrust_MinJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
> 
1720c1517
<     Ana_AllHad_2b_Thrust_n_TTjets.push_back( TH1F(name.Data(),name.Data(), 8, -0.5, 7.5) );
---
>     Ana_AllHad_2b_Thrust_n_TTjets[i] = TH1F(name.Data(),name.Data(), 8, -0.5, 7.5);
1722,1723c1519,1520
<     Ana_AllHad_2b_Thrust_n_bTTjets.push_back( TH1F(name.Data(),name.Data(), 4, -0.5, 3.5) );
<     
---
>     Ana_AllHad_2b_Thrust_n_bTTjets[i] = TH1F(name.Data(),name.Data(), 4, -0.5, 3.5);
> 
1725,1726c1522,1523
<     Ana_AllHad_2b_Thrust_nISRJets.push_back( TH1F(name.Data(),name.Data(), 6, -0.5, 5.5) );
<     
---
>     Ana_AllHad_2b_Thrust_nISRJets[i] = TH1F(name.Data(),name.Data(), 6, -0.5, 5.5);
> 
1728c1525
<     Ana_AllHad_2b_Thrust_ISRMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 800.) );
---
>     Ana_AllHad_2b_Thrust_ISRMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 800.);
1730c1527
<     Ana_AllHad_2b_Thrust_TTMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.) );
---
>     Ana_AllHad_2b_Thrust_TTMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.);
1733c1530
<     Ana_AllHad_2b_Thrust_ISR_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_ISR_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1735c1532
<     Ana_AllHad_2b_Thrust_ISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_ISR_PThrust[i] = TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0);
1737c1534
<     Ana_AllHad_2b_Thrust_ISRMet_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_ISRMet_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1739c1536
<     Ana_AllHad_2b_Thrust_METoverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_METoverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1741,1743c1538,1540
<     Ana_AllHad_2b_Thrust_METoverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
<     
<     
---
>     Ana_AllHad_2b_Thrust_METoverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
> 
> 
1745c1542
<     Ana_AllHad_2b_Thrust_TT_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TT_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1747c1544
<     Ana_AllHad_2b_Thrust_TT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0);
1749c1546
<     Ana_AllHad_2b_Thrust_TToverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TToverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1751c1548
<     Ana_AllHad_2b_Thrust_TToverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TToverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1754c1551
<     Ana_AllHad_2b_Thrust_METoverTT_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_METoverTT_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1756c1553
<     Ana_AllHad_2b_Thrust_METoverTT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_METoverTT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1759c1556
<     Ana_AllHad_2b_Thrust_ISRTT_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_ISRTT_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1761,1762c1558,1559
<     Ana_AllHad_2b_Thrust_TTMET_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
<     
---
>     Ana_AllHad_2b_Thrust_TTMET_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
> 
1764c1561
<     Ana_AllHad_2b_Thrust_ISR_MET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_ISR_MET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1766,1772c1563,1569
<     Ana_AllHad_2b_Thrust_MET_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
< name = "Ana_AllHad_2b_Thrust_ISR_TT_pt_"+istr+"cut";
< Ana_AllHad_2b_Thrust_ISR_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
< name = "Ana_AllHad_2b_Thrust_ISR_MET_pthrust_"+istr+"cut";
< Ana_AllHad_2b_Thrust_ISR_MET_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0) );
< name = "Ana_AllHad_2b_Thrust_MET_TT_pthrust_"+istr+"cut";
<     Ana_AllHad_2b_Thrust_MET_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_MET_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
>     name = "Ana_AllHad_2b_Thrust_ISR_TT_pt_"+istr+"cut";
>     Ana_AllHad_2b_Thrust_ISR_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
>     name = "Ana_AllHad_2b_Thrust_ISR_MET_pthrust_"+istr+"cut";
>     Ana_AllHad_2b_Thrust_ISR_MET_pthrust[i] = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0);
>     name = "Ana_AllHad_2b_Thrust_MET_TT_pthrust_"+istr+"cut";
>     Ana_AllHad_2b_Thrust_MET_TT_pthrust[i] = TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0);
1774c1571
<     Ana_AllHad_2b_Thrust_ISR_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_ISR_TT_pthrust[i]  = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0);
1779c1576
<     Ana_AllHad_2b_Thrust_multISR_ISR_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1781c1578
<     Ana_AllHad_2b_Thrust_multISR_ISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0);
1783c1580
<     Ana_AllHad_2b_Thrust_multISR_ISRMet_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISRMet_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1785c1582
<     Ana_AllHad_2b_Thrust_multISR_METoverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_METoverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1787c1584
<     Ana_AllHad_2b_Thrust_multISR_METoverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_METoverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1790c1587
<     Ana_AllHad_2b_Thrust_multISR_TT_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_TT_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1792c1589
<     Ana_AllHad_2b_Thrust_multISR_TT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_TT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0);
1794c1591
<     Ana_AllHad_2b_Thrust_multISR_TToverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 6.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_TToverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 6.0);
1796c1593
<     Ana_AllHad_2b_Thrust_multISR_TToverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 6.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_TToverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 6.0);
1799c1596
<     Ana_AllHad_2b_Thrust_multISR_METoverTT_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 6.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_METoverTT_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 6.0);
1801c1598
<     Ana_AllHad_2b_Thrust_multISR_METoverTT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 6.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_METoverTT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 6.0);
1804c1601
<     Ana_AllHad_2b_Thrust_multISR_ISRTT_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISRTT_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1806c1603
<     Ana_AllHad_2b_Thrust_multISR_TTMET_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_multISR_TTMET_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1809c1606
<     Ana_AllHad_2b_Thrust_multISR_ISR_MET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_MET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1811c1608
<     Ana_AllHad_2b_Thrust_multISR_MET_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_MET_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1813c1610
<     Ana_AllHad_2b_Thrust_multISR_ISR_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1815c1612
<     Ana_AllHad_2b_Thrust_multISR_ISR_MET_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_MET_pthrust[i] = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0);
1817c1614
<     Ana_AllHad_2b_Thrust_multISR_MET_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_MET_TT_pthrust[i] = TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0);
1819c1616
<     Ana_AllHad_2b_Thrust_multISR_ISR_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_multISR_ISR_TT_pthrust[i]  = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0);
1824c1621
<     Ana_AllHad_2b_Thrust_MET.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1200.) );
---
>     Ana_AllHad_2b_Thrust_MET[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1200.);
1826c1623
<     Ana_AllHad_2b_Thrust_HT.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1500.) );
---
>     Ana_AllHad_2b_Thrust_HT[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1500.);
1828c1625
<     Ana_AllHad_2b_Thrust_CT.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1500.) );
---
>     Ana_AllHad_2b_Thrust_CT[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1500.);
1831c1628
<     Ana_AllHad_2b_Thrust_nJets.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_nJets[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1833c1630
<     Ana_AllHad_2b_Thrust_nHighPtJets.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_nHighPtJets[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1836c1633
<     Ana_AllHad_2b_Thrust_NJets_NegHemi.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_NJets_NegHemi[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1838c1635
<     Ana_AllHad_2b_Thrust_NJets_PosHemi.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_NJets_PosHemi[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1841c1638
<     Ana_AllHad_2b_Thrust_Jet1Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1200.) );
---
>     Ana_AllHad_2b_Thrust_Jet1Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1200.);
1843c1640
<     Ana_AllHad_2b_Thrust_Jet1Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet1Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1845c1642
<     Ana_AllHad_2b_Thrust_Jet2Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 400. ) );
---
>     Ana_AllHad_2b_Thrust_Jet2Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 400. );
1847c1644
<     Ana_AllHad_2b_Thrust_Jet2Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet2Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1849c1646
<     Ana_AllHad_2b_Thrust_Jet3Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 300. ) );
---
>     Ana_AllHad_2b_Thrust_Jet3Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 300. );
1851c1648
<     Ana_AllHad_2b_Thrust_Jet3Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet3Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1853c1650
<     Ana_AllHad_2b_Thrust_Jet4Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 300. ) );
---
>     Ana_AllHad_2b_Thrust_Jet4Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 300. );
1855c1652
<     Ana_AllHad_2b_Thrust_Jet4Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet4Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1857c1654
<     Ana_AllHad_2b_Thrust_Jet5Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 200. ) );
---
>     Ana_AllHad_2b_Thrust_Jet5Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 200. );
1859c1656
<     Ana_AllHad_2b_Thrust_Jet5Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet5Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1861c1658
<     Ana_AllHad_2b_Thrust_Jet6Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 200. ) );
---
>     Ana_AllHad_2b_Thrust_Jet6Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 200. );
1863c1660
<     Ana_AllHad_2b_Thrust_Jet6Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet6Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1865c1662
<     Ana_AllHad_2b_Thrust_Jet7Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 200. ) );
---
>     Ana_AllHad_2b_Thrust_Jet7Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 200. );
1867c1664
<     Ana_AllHad_2b_Thrust_Jet7Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet7Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1869c1666
<     Ana_AllHad_2b_Thrust_Jet8Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 200. ) );
---
>     Ana_AllHad_2b_Thrust_Jet8Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 200. );
1871c1668
<     Ana_AllHad_2b_Thrust_Jet8Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet8Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1873c1670
<     Ana_AllHad_2b_Thrust_Jet9Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 200. ) );
---
>     Ana_AllHad_2b_Thrust_Jet9Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 200. );
1875c1672
<     Ana_AllHad_2b_Thrust_Jet9Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_Jet9Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1877c1674
<     Ana_AllHad_2b_Thrust_minB_Mt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 500 ) );
---
>     Ana_AllHad_2b_Thrust_minB_Mt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 500 );
1879c1676
<     Ana_AllHad_2b_Thrust_METsig.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 20 ) );
---
>     Ana_AllHad_2b_Thrust_METsig[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 20 );
1881c1678
<     Ana_AllHad_2b_Thrust_MET_over_ISR.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 10. ) );
---
>     Ana_AllHad_2b_Thrust_MET_over_ISR[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 10. );
1883c1680
<     Ana_AllHad_2b_Thrust_bJet1Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 600. ) );
---
>     Ana_AllHad_2b_Thrust_bJet1Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 600. );
1885c1682
<     Ana_AllHad_2b_Thrust_bJet1Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_bJet1Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1887c1684
<     Ana_AllHad_2b_Thrust_bJet1_ijet.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5 ) );
---
>     Ana_AllHad_2b_Thrust_bJet1_ijet[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5 );
1889c1686
<     Ana_AllHad_2b_Thrust_bJet2Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 400. ) );
---
>     Ana_AllHad_2b_Thrust_bJet2Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 400. );
1891c1688
<     Ana_AllHad_2b_Thrust_bJet2Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_bJet2Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1893c1690
<     Ana_AllHad_2b_Thrust_bJet2_ijet.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_bJet2_ijet[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1895c1692
<     Ana_AllHad_2b_Thrust_bJet3Pt.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 300. ) );
---
>     Ana_AllHad_2b_Thrust_bJet3Pt[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 300. );
1897c1694
<     Ana_AllHad_2b_Thrust_bJet3Eta.push_back( TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_bJet3Eta[i] = TH1F(name.Data(),name.Data(), 200, -5.0, 5.0 );
1899c1696
<     Ana_AllHad_2b_Thrust_bJet3_ijet.push_back( TH1F(name.Data(),name.Data(), 21, -0.5, 20.5) );
---
>     Ana_AllHad_2b_Thrust_bJet3_ijet[i] = TH1F(name.Data(),name.Data(), 21, -0.5, 20.5);
1902c1699
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_FoundTop.push_back( TH1F(name.Data(),name.Data(), 2, -0.5, 1.5 ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_FoundTop[i] = TH1F(name.Data(),name.Data(), 2, -0.5, 1.5 );
1905c1702
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_Mass.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 1000.0 ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_Mass[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 1000.0 );
1907c1704
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_pthrust.push_back( TH1F(name.Data(),name.Data(), 500, -700.0, 600.0 ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_pthrust[i] = TH1F(name.Data(),name.Data(), 500, -700.0, 600.0 );
1909c1706
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_top_met_deltaphi.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi() ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_top_met_deltaphi[i] = TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi() );
1911c1708
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_top_thrust_deltaphi.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi() ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_top_thrust_deltaphi[i] = TH1F(name.Data(),name.Data(), 200, 0.0, TMath::Pi() );
1913c1710
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_DeltaR.push_back( TH1F(name.Data(),name.Data(), 200, 0.0, 5.0 ) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_DeltaR[i] = TH1F(name.Data(),name.Data(), 200, 0.0, 5.0 );
1915c1712
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_pthrust_mass.push_back( TH2F(name.Data(),name.Data(), 40, -700.0, 600.0, 40, 0.0, 1000.) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_pthrust_mass[i] = TH2F(name.Data(),name.Data(), 40, -700.0, 600.0, 40, 0.0, 1000.);
1917c1714
<     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_delta_pthrust_mass.push_back( TH2F(name.Data(),name.Data(), 40, -700.0, 600.0, 40, 0.0, 1000.) );
---
>     Ana_AllHad_2b_Thrust_T_MaxPThrust_WMinDeltaR_delta_pthrust_mass[i] = TH2F(name.Data(),name.Data(), 40, -700.0, 600.0, 40, 0.0, 1000.);
1922c1719
<     Ana_AllHad_2b_Thrust_TruthTopID.push_back( TH1F(name.Data(),name.Data(),4,-0.5,3.5) );
---
>     Ana_AllHad_2b_Thrust_TruthTopID[i] = TH1F(name.Data(),name.Data(),4,-0.5,3.5);
1925c1722
<     Ana_AllHad_2b_Thrust_TruthAllHad_METISR_PtDirRatio.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_METISR_PtDirRatio[i]  = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1928c1725
<     Ana_AllHad_2b_Thrust_TruthAllHad_MaxJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_MaxJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1930c1727
<     Ana_AllHad_2b_Thrust_TruthAllHad_MinJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_MinJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1933c1730
<     Ana_AllHad_2b_Thrust_TruthAllHad_n_TTjets.push_back( TH1F(name.Data(),name.Data(), 8, -0.5, 7.5) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_n_TTjets[i] = TH1F(name.Data(),name.Data(), 8, -0.5, 7.5);
1935c1732
<     Ana_AllHad_2b_Thrust_TruthAllHad_n_bTTjets.push_back( TH1F(name.Data(),name.Data(), 4, -0.5, 3.5) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_n_bTTjets[i] = TH1F(name.Data(),name.Data(), 4, -0.5, 3.5);
1938c1735
<     Ana_AllHad_2b_Thrust_TruthAllHad_nISRJets.push_back( TH1F(name.Data(),name.Data(), 6, -0.5, 5.5) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_nISRJets[i] = TH1F(name.Data(),name.Data(), 6, -0.5, 5.5);
1941c1738
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISRMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 800.) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISRMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 800.);
1943c1740
<     Ana_AllHad_2b_Thrust_TruthAllHad_TTMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TTMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.);
1946c1743
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1948c1745
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_PThrust[i] = TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0);
1950c1747
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISRMet_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISRMet_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1952c1749
<     Ana_AllHad_2b_Thrust_TruthAllHad_METoverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_METoverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1954c1751
<     Ana_AllHad_2b_Thrust_TruthAllHad_METoverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_METoverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1957c1754
<     Ana_AllHad_2b_Thrust_TruthAllHad_TT_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TT_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
1959c1756
<     Ana_AllHad_2b_Thrust_TruthAllHad_TT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0);
1961c1758
<     Ana_AllHad_2b_Thrust_TruthAllHad_TToverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TToverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1963c1760
< Ana_AllHad_2b_Thrust_TruthAllHad_TToverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TToverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1966c1763
<     Ana_AllHad_2b_Thrust_TruthAllHad_METoverTT_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_METoverTT_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
1968c1765
<     Ana_AllHad_2b_Thrust_TruthAllHad_METoverTT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_METoverTT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1971c1768
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISRTT_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISRTT_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1973c1770
<     Ana_AllHad_2b_Thrust_TruthAllHad_TTMET_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TTMET_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
1976c1773
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_MET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_MET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1978c1775
<     Ana_AllHad_2b_Thrust_TruthAllHad_MET_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_MET_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1980c1777
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1982c1779
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_MET_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_MET_pthrust[i] = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0);
1984c1781
<     Ana_AllHad_2b_Thrust_TruthAllHad_MET_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_MET_TT_pthrust[i] = TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0);
1986c1783
<     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_ISR_TT_pthrust[i]  = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0);
1989c1786
<     Ana_AllHad_2b_Thrust_TruthAllHad_TruthISR_RecoISR_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TruthISR_RecoISR_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1991c1788
<     Ana_AllHad_2b_Thrust_TruthAllHad_TruthMET_RecoMET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthAllHad_TruthMET_RecoMET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
1996c1793
<     Ana_AllHad_2b_Thrust_TruthNotHad_METISR_PtDirRatio.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_METISR_PtDirRatio[i]  = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
1999c1796
<     Ana_AllHad_2b_Thrust_TruthNotHad_MaxJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_MaxJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
2001c1798
<     Ana_AllHad_2b_Thrust_TruthNotHad_MinJetBMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_MinJetBMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
2004c1801
<     Ana_AllHad_2b_Thrust_TruthNotHad_n_TTjets.push_back( TH1F(name.Data(),name.Data(), 8, -0.5, 7.5) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_n_TTjets[i] = TH1F(name.Data(),name.Data(), 8, -0.5, 7.5);
2006c1803
<     Ana_AllHad_2b_Thrust_TruthNotHad_n_bTTjets.push_back( TH1F(name.Data(),name.Data(), 4, -0.5, 3.5) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_n_bTTjets[i] = TH1F(name.Data(),name.Data(), 4, -0.5, 3.5);
2009c1806
<     Ana_AllHad_2b_Thrust_TruthNotHad_nISRJets.push_back( TH1F(name.Data(),name.Data(), 6, -0.5, 5.5) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_nISRJets[i] = TH1F(name.Data(),name.Data(), 6, -0.5, 5.5);
2012c1809
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISRMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 800.) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISRMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 800.);
2014c1811
<     Ana_AllHad_2b_Thrust_TruthNotHad_TTMass.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TTMass[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.);
2017c1814
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
2019c1816
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_PThrust[i] = TH1F(name.Data(),name.Data(), 800, -1000.0, 1000.0);
2021c1818
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISRMet_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISRMet_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
2023c1820
<     Ana_AllHad_2b_Thrust_TruthNotHad_METoverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_METoverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
2025c1822
<     Ana_AllHad_2b_Thrust_TruthNotHad_METoverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_METoverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
2028c1825
<     Ana_AllHad_2b_Thrust_TruthNotHad_TT_Pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TT_Pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 1000.0);
2030c1827
<     Ana_AllHad_2b_Thrust_TruthNotHad_TT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -1000.0, 1000.0);
2032c1829
<     Ana_AllHad_2b_Thrust_TruthNotHad_TToverISR_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TToverISR_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
2034c1831
<     Ana_AllHad_2b_Thrust_TruthNotHad_TToverISR_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TToverISR_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
2037c1834
<     Ana_AllHad_2b_Thrust_TruthNotHad_METoverTT_pt.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_METoverTT_pt[i] = TH1F(name.Data(),name.Data(), 400, 0.0, 5.0);
2039c1836
<     Ana_AllHad_2b_Thrust_TruthNotHad_METoverTT_PThrust.push_back( TH1F(name.Data(),name.Data(), 400, -5.0, 5.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_METoverTT_PThrust[i] = TH1F(name.Data(),name.Data(), 400, -5.0, 5.0);
2042c1839
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISRTT_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISRTT_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
2044c1841
<     Ana_AllHad_2b_Thrust_TruthNotHad_TTMET_DPhi.push_back( TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi()) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TTMET_DPhi[i] = TH1F(name.Data(),name.Data(), 400, 0.0, TMath::Pi());
2047c1844
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_MET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_MET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
2049c1846
<     Ana_AllHad_2b_Thrust_TruthNotHad_MET_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_MET_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
2051c1848
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_TT_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_TT_pt[i]  = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
2053c1850
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_MET_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_MET_pthrust[i] = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, 0.0, 600.0);
2055c1852
<     Ana_AllHad_2b_Thrust_TruthNotHad_MET_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_MET_TT_pthrust[i] = TH2F(name.Data(),name.Data(), 100, 0., 600., 100, -900.0, 900.0);
2057c1854
<     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_TT_pthrust.push_back( TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_ISR_TT_pthrust[i]  = TH2F(name.Data(),name.Data(), 100, -900., 900., 100, -900.0, 900.0);
2060c1857
<     Ana_AllHad_2b_Thrust_TruthNotHad_TruthISR_RecoISR_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TruthISR_RecoISR_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
2062c1859
<     Ana_AllHad_2b_Thrust_TruthNotHad_TruthMET_RecoMET_pt.push_back( TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0) );
---
>     Ana_AllHad_2b_Thrust_TruthNotHad_TruthMET_RecoMET_pt[i] = TH2F(name.Data(),name.Data(), 100, 0., 900., 100, 0.0, 900.0);
2075a1873,1874
>   std::string output_name = "output.root";
> 
2146c1945
<   for ( int i=0; i<Ana_AllHad_2b_Thrust_Thrust.size(); i++ ) {
---
>   for ( int i=0; i<7; i++ ) {
2264,2268d2062
<     Ana_AllHad_2b_Thrust_TruthTopID[i].GetXaxis()->SetBinLabel(1, "Truth All Hadronic");
<     Ana_AllHad_2b_Thrust_TruthTopID[i].GetXaxis()->SetBinLabel(2, "Truth Single Tau");
<     Ana_AllHad_2b_Thrust_TruthTopID[i].GetXaxis()->SetBinLabel(3, "Truth Single lepton");
<     Ana_AllHad_2b_Thrust_TruthTopID[i].GetXaxis()->SetBinLabel(4, "Truth Di-leptonic/Di tau");
< 
